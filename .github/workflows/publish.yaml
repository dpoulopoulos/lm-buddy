name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI


on: 
  push:
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"
      - "dev"
      - "release/v[0-9].[0-9]"
  workflow_dispatch:



jobs:
    build:
      name: Build distribution 📦
      runs-on: ubuntu-latest
  
      steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

    publish-to-testpypi:
        name: >-
            Publish Python 🐍 distribution 📦 to PyPI
        needs:
        - build
        runs-on: ubuntu-latest
        env:
            POETRY_PYPI_TOKEN_TESTPYPI: ${{ secrets.PYPI_TEST_TOKEN }}
        steps:
        - uses: actions/checkout@v4
        - name: prepare with poetry
          run: |
            export VENV_PATH="$HOME/venv" 
            python3 -m venv $VENV_PATH 
            $VENV_PATH/bin/pip install -U pip setuptools
            $VENV_PATH/bin/pip install poetry
            cd "$GITHUB_WORKSPACE"

            $VENV_PATH/bin/poetry config repositories.testpypi https://test.pypi.org/legacy/
            $VENV_PATH/bin/poetry publish --repository testpypi --build
    
    # github-release:
    #     name: >-
    #         Sign the Python 🐍 distribution 📦 with Sigstore
    #         and upload them to GitHub Release
    #     needs:
    #     - publish-to-pypi
    #     runs-on: ubuntu-latest
    
    #     permissions:
    #         contents: write  # IMPORTANT: mandatory for making GitHub Releases
    #         id-token: write  # IMPORTANT: mandatory for sigstore
    
    #     steps:
    #     - name: Download all the dists
    #       uses: actions/download-artifact@v3
    #       with:
    #         name: python-package-distributions
    #         path: dist/

    #     - name: Sign the dists with Sigstore
    #       uses: sigstore/gh-action-sigstore-python@v1.2.3
    #       with:
    #           inputs: >-
    #             ./dist/*.tar.gz
    #             ./dist/*.whl

    #     - name: Create GitHub Release
    #       env:
    #           GITHUB_TOKEN: ${{ github.token }}
    #       run: >-
    #         gh release create
    #         '${{ github.ref_name }}'
    #         --repo '${{ github.repository }}'
                
    #     - name: Upload artifact signatures to GitHub Release
    #       env:
    #         GITHUB_TOKEN: ${{ github.token }}
    #       # Upload to GitHub Release using the `gh` CLI.
    #       # `dist/` contains the built packages, and the
    #       # sigstore-produced signatures and certificates.
    #       run: >-
    #         gh release upload
    #         '${{ github.ref_name }}' dist/**
    #         --repo '${{ github.repository }}'
        
    