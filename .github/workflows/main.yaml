name: Tests

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "**"

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: get ruff version
        id: get_ruff_version
        uses: mikefarah/yq@master
        with:
          cmd: yq -oy '.tool.poetry.dev-dependencies.ruff' pyproject.toml

      - name: install and run ruff
        env:
          RUFF_VERSION: ${{ steps.get_ruff_version.outputs.result }}
        run: |
          export VENV_PATH="$HOME/venv" 
          python3 -m venv $VENV_PATH 
          source "$VENV_PATH/bin/activate"
          pip install uv
          uv pip install ruff
          ruff --output-format=github .
        continue-on-error: false
        

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: poetry

      - name: set up poetry
        id: poetry
        run: |
          export VENV_PATH="$HOME/venv" 
          python3 -m venv $VENV_PATH 
          source "$VENV_PATH/bin/activate"
          pip install uv
          uv pip install ruff poetry
        continue-on-error: false

      - name: Lock Poetry
        run: |
          source "$VENV_PATH/bin/activate"
          poetry lock

      - name: Install test dependencies
        run: |
          source "$VENV_PATH/bin/activate"
          poetry install
        continue-on-error: true

      - name: Run unit tests
        run: |
          source "$VENV_PATH/bin/activate"
          poetry run pytest tests/unit
        continue-on-error: false

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: poetry

      - name: Install poetry
        run: |
          export VENV_PATH="$HOME/venv" 
          python3 -m venv $VENV_PATH 
          source "$VENV_PATH/bin/activate"
          pip install uv
          uv pip install poetry 
        continue-on-error: false

      - name: Lock Poetry
        run: |
          source "$VENV_PATH/bin/activate"
          poetry lock

      - name: Install test dependencies
        run: |
          source "$VENV_PATH/bin/activate"
          poetry install
        continue-on-error: true

      - name: Run integration tests
        run: |
          source "$VENV_PATH/bin/activate"
          poetry run pytest tests/integration
        continue-on-error: false
